---
const navItems = [
    { title: "Home", url: "/" },
    { title: "Sobre Mi", url: "/#about-me" },
    { title: "Projects", url: "/projects" },
    { title: "Contact", url: "/contact" }
];
---

<div class="mobile-menu-container block md:hidden">
    <!-- Hamburger Button -->
    <button id="mobile-menu-button" class="flex flex-col justify-center items-center w-8 h-8 md:hidden" aria-label="Menu">
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
    </button>

    <!-- Mobile Sidebar -->
    <div id="mobile-sidebar" class="fixed top-0 right-0 w-64 h-screen bg-black/89 transform translate-x-full transition-transform duration-300 ease-in-out z-50 backdrop-blur-lg">
        <div class="flex flex-col p-5 h-full">
            <!-- Close button -->
            <button id="close-sidebar-button" class="flex flex-col justify-center items-center w-8 h-8 ml-auto" aria-label="Close Menu">
                <span class="hamburger-line"></span>
                <span class="hamburger-line"></span>
                <span class="hamburger-line"></span>
            </button>
            
            <!-- Navigation Links -->
            <nav class="flex flex-col space-y-4">
                {navItems.map((item) => (
                    <a href={item.url} class="text-white text-xl py-2 hover:text-emerald-400 transition-colors duration-300">
                        {item.title}
                    </a>
                ))}
            </nav>
        </div>
    </div>
    
    <!-- Overlay to close sidebar when clicked outside - placed outside the md:hidden container -->
    <div id="overlay" class="fixed inset-0 bg-black opacity-0 pointer-events-none transition-opacity duration-300 z-40"></div>
</div>

<style>
    .hamburger-line {
        width: 1.5rem; /* w-6 */
        height: 2px;    /* h-0.5 */
        background-color: white;
        margin: 0.25rem 0; /* my-1 */
        transition: all 300ms;
        display: block;
        transform-origin: center;
    }

    /* Cuando el bot√≥n tenga .menu-open */
    .menu-open .hamburger-line:nth-child(1) {
        transform: rotate(45deg) translateY(6px);
    }
    .menu-open .hamburger-line:nth-child(2) {
        opacity: 0;
    }
    .menu-open .hamburger-line:nth-child(3) {
        transform: rotate(-45deg) translateY(-6px);
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const menuButton = document.getElementById('mobile-menu-button');
        const sidebar = document.getElementById('mobile-sidebar');
        const closeButton = document.getElementById('close-sidebar-button');
        const overlay = document.getElementById('overlay');
        const navLinks = document.querySelectorAll('#mobile-sidebar nav a');
        
        let isMenuOpen = false;

        if (sidebar && menuButton && closeButton && overlay) {
            function openMenu() {
                sidebar!.classList.remove('translate-x-full');
                menuButton!.classList.add('menu-open');
                closeButton!.classList.add('menu-open');
                overlay!.classList.add('opacity-50');
                overlay!.classList.remove('pointer-events-none');
                document.body.style.overflow = 'hidden';
                isMenuOpen = true;
            }
    
            function closeMenu() {
                sidebar!.classList.add('translate-x-full');
                menuButton!.classList.remove('menu-open');
                closeButton!.classList.remove('menu-open');
                overlay!.classList.remove('opacity-50');
                overlay!.classList.add('pointer-events-none');
                document!.body.style.overflow = '';
                isMenuOpen = false;
            }
    
            function toggleMenu() {
                if (isMenuOpen) {
                    closeMenu();
                } else {
                    openMenu();
                }
            }
    
            // Event listeners with debugging
            menuButton.addEventListener('click', (e) => {
                e.stopPropagation(); // Prevent event bubbling
                toggleMenu();
            });
            
            closeButton.addEventListener('click', (e) => {
                e.stopPropagation(); // Prevent event bubbling
                closeMenu();
            });
            
            // Make overlay explicitly handle both click and touch events
            overlay.addEventListener('click', (e) => {
                e.stopPropagation();
                closeMenu();
                console.log('Overlay clicked');
            });
            
            overlay.addEventListener('touchstart', (e) => {
                e.preventDefault();
                closeMenu();
                console.log('Overlay touched');
            });
            
            // Prevent clicks on the sidebar from closing the menu
            sidebar.addEventListener('click', (e) => {
                e.stopPropagation();
            });
            
            // Close menu when clicking navigation links
            navLinks.forEach(link => {
                link.addEventListener('click', closeMenu);
            });
            
            // Global document click handler as fallback
            document.addEventListener('click', (e) => {
                const target = e.target as Node;
                if (isMenuOpen && !sidebar.contains(target) && target !== menuButton) {
                    closeMenu();
                    console.log('Document clicked outside sidebar');
                }
            });
            
            // Add event listener for ESC key
            document.addEventListener('keydown', (e) => {
                if (e.key === 'Escape' && isMenuOpen) {
                    closeMenu();
                }
            });

        }

    });
</script>

